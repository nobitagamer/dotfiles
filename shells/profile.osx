#!/bin/sh

############
# Homebrew
############
if [ -f /opt/homebrew/bin/brew ]; then
  debug_echo "Loading Homebrew..."
  eval "$(/opt/homebrew/bin/brew shellenv)"
fi

# Use Java 8 for sdkmanager
export JAVA_HOME=$(/usr/libexec/java_home -v 1.8) # temurin@8 for android-sdk
# export JAVA_HOME=$(/usr/libexec/java_home -v 11) # For Unity 2022.3+
# export JAVA_HOME=$(/usr/libexec/java_home -v 17) # For android-commandlinetools
export PATH=${JAVA_HOME}/bin:$PATH

# export ANDROID_HOME=/usr/local/share/android-sdk # Intel
export ANDROID_HOME=/opt/homebrew/share/android-sdk # Apple Silicon
# export ANDROID_HOME=$HOMEBREW_PREFIX/share/android-commandlinetools # Apple Silicon

# MUST use android-ndk r16b for Unity 2018.3.7f1
# Because the Catalina stronger verification, IL2CPP build will fail if NDK version is NOT install via the SDK Installer in Android Studio.
# See https://forum.unity.com/threads/il2cppcore-dll-did-not-run-properly.738350/#post-5392932
# export ANDROID_NDK_ROOT=${ANDROID_HOME}/ndk # Obsoleted by Unity3D 2021.3+
#export ANDROID_NDK_HOME=${ANDROID_HOME}/ndk/16.1.4479499

# export OPENSSL_ROOT="$(brew --prefix openssl@1.1)"
# See https://github.com/pyenv/pyenv/issues/1067#issuecomment-472798576
# export PATH=$OPENSSL_ROOT/bin:/opt/local/bin:/opt/local/sbin:$PATH
export PATH=/usr/local/bin:/usr/local/sbin:/opt/local/bin:/opt/local/sbin:$PATH
export MANPATH=/opt/local/share/man:$MANPATH

# Obsoleted, use Mise instead
# Rehash already done by nodenv-package-rehash
# if which rbenv > /dev/null; then
#   eval "$(rbenv init - --no-rehash)";
# else
#   eval "$(~/.rbenv/bin/rbenv init -)";
# fi


# export PATH="$(brew --prefix icu4c)/bin:$PATH"
# export PATH="$(brew --prefix icu4c)/sbin:$PATH"

echo '.profile loaded successfully.'
