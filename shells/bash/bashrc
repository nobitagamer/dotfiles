#!/usr/bin/env bash
# ~/.bashrc: executed by bash(1) for non-login shells.
# see /usr/share/doc/bash/examples/startup-files (in the package bash-doc)
# for examples

# This does NOT work on macOS, use [[ "$-" =~ 'i' ]] instead
# iatest=$(expr index "$-" i)

# if [ -z "$PS1" ]; then
#   echo This Bash Shell is NOT an Interactive Shell
# else
#   echo This Bash Shell is an Interactive Shell
# fi

# In any Bourne-style shell, the `i` option indicates whether the shell is interactive
case $- in
*i*) echo This Bash Shell is an Interactive Shell ;;
# Do NOT output anything in non-interative shelll that cause rsync error: protocol incompatibility (code 2),
# see https://serverfault.com/questions/304125/rsync-seems-incompatible-with-bashrc-causes-is-your-shell-clean/308604
*) ;; # echo This Bash Shell is NOT an Interactive Shell ;;
esac

if [[ "$-" =~ 'i' ]]; then bind "set bell-style visible"; fi

# Source global definitions
# BUG: CentOS this will cause `bash: PROMPT_COMMAND: readonly variable`
# if [ -f /etc/bashrc ]; then
#   . /etc/bashrc
# fi

# Having your locale not set to a UTF-8 locale will cause issues with building and uploading your build.
export LC_ALL=en_US.UTF-8
export LANG=en_US.UTF-8

# BUG: Do NOT load login shell script that output to console will cause SFTP - VSCode error `Unexpected packet before version`
# Ensure that a non-login shell has a defined environment.
# if [[ -s "$HOME/.bash_profile" ]]; then
#   shopt -q login_shell || source "$HOME/.bash_profile"
# fi

# REMOVED: Already set in sensible.bash
# # don't put duplicate lines or lines starting with space in the history.
# # See bash(1) for more options
# HISTCONTROL=ignoreboth

# # append to the history file, don't overwrite it
# shopt -s histappend

# # for setting history length see HISTSIZE and HISTFILESIZE in bash(1)
# HISTSIZE=1000
# HISTFILESIZE=2000

# check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
shopt -s checkwinsize

# If set, the pattern "**" used in a pathname expansion context will
# match all files and zero or more directories and subdirectories.
#shopt -s globstar

# make less more friendly for non-text input files, see lesspipe(1)
[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"

# set variable identifying the chroot you work in (used in the prompt below)
if [ -z "${debian_chroot:-}" ] && [ -r /etc/debian_chroot ]; then
  debian_chroot=$(cat /etc/debian_chroot)
fi

# enable color support of ls and also add handy aliases
if [ -x /usr/bin/dircolors ]; then
  test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
  alias ls='ls --color=auto'
  #alias dir='dir --color=auto'
  #alias vdir='vdir --color=auto'

  alias grep='grep --color=auto'
  alias fgrep='fgrep --color=auto'
  alias egrep='egrep --color=auto'
fi

# colored GCC warnings and errors
#export GCC_COLORS='error=01;31:warning=01;35:note=01;36:caret=01;32:locus=01:quote=01'

# some more ls aliases
alias ll='ls -alF'
alias la='ls -A'
alias l='ls -CF'

# Add an "alert" alias for long running commands.  Use like so:
#   sleep 10; alert
alias alert='notify-send --urgency=low -i "$([ $? = 0 ] && echo terminal || echo error)" "$(history|tail -n1|sed -e '\''s/^\s*[0-9]\+\s*//;s/[;&|]\s*alert$//'\'')"'

# Alias definitions.
# You may want to put all your additions into a separate file like
# ~/.bash_aliases, instead of adding them here directly.
# See /usr/share/doc/bash-doc/examples in the bash-doc package.

if [ -f ~/.bash_aliases ]; then
  . ~/.bash_aliases
fi

# enable programmable completion features (you don't need to enable
# this, if it's already enabled in /etc/bash.bashrc and /etc/profile
# sources /etc/bash.bashrc).
if ! shopt -oq posix; then
  if [ -f /usr/share/bash-completion/bash_completion ]; then
    . /usr/share/bash-completion/bash_completion
  elif [ -f /etc/bash_completion ]; then
    . /etc/bash_completion
  fi
fi
