- defaults:
    link:
      create: true
      relink: true
      force: true

- brew:
  - cocoapods

- shell++:
  - description: Install cocoapods for build iOS
    condition: 'true'
  - stderr: true
    command: |
      RUBY_VERSION=2.7.2
      if [ -f ~/.ruby-version ];then
        RUBY_VERSION=$(cat ~/.ruby-version)

        rm ~/.rbenv/version
        ln -s ~/.ruby-version ~/.rbenv/version
      fi

      # Install Ruby for fastlane
      eval "$(~/.rbenv/bin/rbenv init -)"

      brew update
      # !NOTE: enable this if openssl error
      # brew reinstall openssl
      # brew upgrade ruby-build rbenv

      rbenv update
      rbenv install --skip-existing $RUBY_VERSION

      # Install bundle package manager
      rbenv rehash
      rbenv shell $RUBY_VERSION

      gem install activesupport -v 4.2.6

      # The last version of bundler (>= 0) to support your Ruby & RubyGems was 2.4.22
      # Latest bundler requires Ruby version >= 3.0.0.
      gem install bundler -v 2.4.22

      gem install bundle cocoapods fastlane
      # !NOTE: must remove all shims before rehash
      rm -f ~/.rbenv/shims/*
      rbenv rehash

      # Fix VSTS execute bash with --no-profile that will force rbenv use system Ruby.
      rbenv global $RUBY_VERSION

      # Rebuild native extensions
      sudo chown -R $USER:staff ~/.rbenv/gems/2.7.0/gems
      gem pristine --all

- shell++:
  - description: Install rbenv
    condition: '! hash rbenv 2>/dev/null || test -h $(which rbenv)'
  - stdout: true
    stderr: true
    command: |
      export PATH="$HOME/.rbenv/bin:$PATH"
      if [ ! -d ~/.rbenv  ]; then
        git clone https://github.com/rbenv/rbenv.git ~/.rbenv

        ## Compile and install Ruby
        git clone https://github.com/rbenv/ruby-build.git ~/.rbenv/plugins/ruby-build

        ## Update rbenv and installed plugins
        git clone https://github.com/rkh/rbenv-update.git ~/.rbenv/plugins/rbenv-update

        # curl -fsSL https://github.com/rbenv/rbenv-installer/raw/master/bin/rbenv-installer | bash

        ## Share gems across multiple Ruby installs
        # git clone https://github.com/tpope/rbenv-communal-gems.git ~/.rbenv/plugins/rbenv-communal-gems
        # git clone https://github.com/ianheggie/rbenv-binstubs.git ~/.rbenv/plugins/rbenv-binstubs
        # git clone https://github.com/garnieretienne/rvm-download.git ~/.rbenv/plugins/rvm-download
      else
        rbenv update

        # Cleanup obsoleted plugins (included in rbenv)
        rm -rf ~/.rbenv/plugins/rbenv-communal-gems
        rm -rf ~/.rbenv/plugins/rbenv-binstubs
        rm -rf ~/.rbenv/plugins/rvm-download
      fi

      eval "$(rbenv init -)"

      if [ -r ~/.ruby-version ] && [ ! -d ~/.rbenv/versions/$(cat ~/.ruby-version) ]; then
        rbenv download $(cat ~/.ruby-version) || rbenv install $(cat ~/.ruby-version) # CentOS 7 does not have Ruby 2.4.6
        rbenv global $(cat ~/.ruby-version)
      fi

      # rbenv communize --all
      curl -fsSL https://raw.githubusercontent.com/rbenv/rbenv-installer/main/bin/rbenv-doctor | bash

- shell++:
  - description: Prepare XCode and Create update-xcode.sh
    condition: 'true'
  - stdout: true
    stderr: true
    command: |

      cat <<- EOF > ~/update-xcode.sh
      #!/bin/bash

      echo "Updating cocoapods..."
      # Cleanup corrupted pods
      # rm -rf "${HOME}/Library/Caches/CocoaPods"
      # gem install cocoapods
      brew update
      brew upgrade cocoapods

      pod env
      pod repo update

      if ! xcodebuild -checkFirstLaunchStatus; then
        echo "Running XCode First Lauch to accept license..."
        sudo xcodebuild -runFirstLaunch
      fi

      # See xcode-select --install
      # sudo rm -rf /Library/Developer/CommandLineTools
      xcode-select --install

      sudo xcodebuild -downloadPlatform iOS
      EOF

      chmod +x ~/update-xcode.sh && ~/update-xcode.sh
