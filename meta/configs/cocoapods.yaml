- defaults:
    link:
      create: true
      relink: true
      force: true

- brew:
  - cocoapods

- shell++:
  - description: Install cocoapods for build iOS
    condition: 'true'
  - stderr: true
    command: |
      # RUBY_VERSION=2.7.2
      # if [ -f ~/.ruby-version ];then
      #   RUBY_VERSION=$(cat ~/.ruby-version)

      #   # rm ~/.rbenv/version
      #   # ln -s ~/.ruby-version ~/.rbenv/version
      # fi

      # # Install Ruby for fastlane
      # eval "$(~/.rbenv/bin/rbenv init -)"

      # !NOTE: enable this if openssl error
      # brew update
      # brew reinstall openssl
      # brew upgrade ruby-build rbenv

      # rbenv update
      # rbenv install --skip-existing $RUBY_VERSION

      # # Install bundle package manager
      # rbenv rehash
      # rbenv shell $RUBY_VERSION

      eval "$(mise activate --shims)"
      gem env

      # The last version of bundler (>= 0) to support your Ruby & RubyGems was 2.4.22
      # Latest bundler requires Ruby version >= 3.0.0.
      gem install 'bundler:2.4.22'

      # Obsoleted: use brew instead
      # gem install 'activesupport:4.2.6' cocoapods
      # gem install bundler cocoapods

      # !NOTE: must remove all shims before rehash
      # rm -f ~/.rbenv/shims/*
      # rbenv rehash

      # # Fix VSTS execute bash with --no-profile that will force rbenv use system Ruby.
      # rbenv global $RUBY_VERSION

      # Rebuild native extensions
      # sudo chown -R $USER:staff ~/.rbenv/gems/2.7.0/gems
      # gem pristine --all

- shell++:
  - description: Prepare XCode and Create update-xcode.sh
    condition: 'true'
  - stdout: true
    stderr: true
    command: |

      cat <<- EOF > ~/update-xcode.sh
      #!/bin/bash

      echo "Updating cocoapods..."
      # Cleanup corrupted pods
      # rm -rf "${HOME}/Library/Caches/CocoaPods"
      # gem install cocoapods
      brew update
      brew upgrade cocoapods

      pod env
      pod repo update

      if ! xcodebuild -checkFirstLaunchStatus; then
        echo "Running XCode First Lauch to accept license..."
        sudo xcodebuild -runFirstLaunch
      fi

      # See xcode-select --install
      # sudo rm -rf /Library/Developer/CommandLineTools
      xcode-select --install

      sudo xcodebuild -downloadPlatform iOS
      EOF

      chmod +x ~/update-xcode.sh && ~/update-xcode.sh
